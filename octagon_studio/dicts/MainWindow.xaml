<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:octagon_studio"
>
    <!-- Main window -->
    <Style x:Key="MainWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome
                    CaptionHeight="10"
                    CornerRadius="4"
                    GlassFrameThickness="0,0,0,-1"
                    NonClientFrameEdges="None"
                    ResizeBorderThickness="4"
                    UseAeroCaptionButtons="False"
                />
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#202020"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="WindowState" Value="Minimized"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="ResizeMode" Value="CanResize"/>
        <Setter Property="Icon" Value="..\resources\logo.png"/>
        <Setter Property="MinHeight" Value="200"/>
        <Setter Property="MinWidth" Value="200"/>
    </Style>

    <!-- Splitter between navigator and work area -->
    <Style x:Key="MainWindowSplitter" TargetType="{x:Type GridSplitter}">
        <Setter Property="ShowsPreview" Value="False"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Foreground" Value="{x:Null}"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="#1195989A"/>
        <Setter Property="BorderThickness" Value="0,0,1,0"/>
    </Style>

    <!-- Logo in left top of window -->
    <Style x:Key="MainWindowLogo" TargetType="{x:Type Image}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="Width" Value="84"/>
        <Setter Property="Margin" Value="26,16,0,17"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Source" Value="..\resources\main_window\images\menutop-logo.png"/>
    </Style>
    
    <!-- Upper menu -->
    <Style x:Key="MainWindowTopMenu" TargetType="{x:Type Menu}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="Margin" Value="85,16,0,17"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="600"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="#FFD1D1D1"/>
    </Style>

    <Style x:Key="MainWindowTopMenuItem" TargetType="{x:Type MenuItem}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="Margin" Value="0,0,20,0"/>
        <Setter Property="BorderThickness" Value="1,1,1,1"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="Black"/>
                <Setter Property="Background" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Changing look of the dropdown menu. Implementation is postponed -->
    <Style x:Key="MainWindowTopMenuSubitem" TargetType="{x:Type MenuItem}">
        <Setter Property="Padding" Value="0,6,0,6"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="BorderThickness" Value="0,0,0,0"/>
        <Setter Property="Cursor" Value="Hand"/>

        <Style.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="BorderThickness" Value="0,0,0,0"/>
                <Setter Property="Background" Value="#FF000000"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Name="Border">
            <Grid>
                <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True"/>
                <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                    <Border Name="SubmenuBorder" SnapsToDevicePixels="True" Background="#FF191919">
                        <StackPanel Name="SubmenuElems" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,1"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#FF191919"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="#FF3C3C3C"/>
                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,1"/>
                <Setter TargetName="Border" Property="CornerRadius" Value="5"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="False">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,0,0"/>
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,0"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#FFB6B6B6"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Buttons minimize / maximize / close -->
    <Style TargetType="{x:Type Button}" x:Key="MainWindowControls">
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Margin" Value="0,0,10,0"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Cursor" Value="Hand"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.7"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MainWindowControlPanel" TargetType="{x:Type StackPanel}">
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Margin" Value="0,19,20,20"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="70"/>
    </Style>

    <!-- Header splitter -->
    <Style x:Key="MainWindowTopSplitter" TargetType="{x:Type Rectangle}">
        <Setter Property="Fill" Value="#1195989A"/>
        <Setter Property="Height" Value="1"/>
        <Setter Property="Margin" Value="0,58,-1,0"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>
    
    <!-- Left menu -->
    <Style x:Key="MainWindowLeftMenu" TargetType="{x:Type StackPanel}">
        <Setter Property="Background" Value="#FF161616"/>
    </Style>
    
    <Style x:Key="MainWindowLeftMenuBtn" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="32"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Margin" Value="0,24,0,0"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Cursor" Value="Hand"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.7"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Navigator -->
    <Style x:Key="MainWindowNavigator" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="#FF0D0D0D"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="MainWindowNavigatorCont" TargetType="{x:Type ListView}">
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="#1195989A"/>
        <Setter Property="BorderThickness" Value="0,1,0,0"/>
    </Style>

    <Style x:Key="MainWindowNavigatorBtn" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="37"/>
        <Setter Property="BorderBrush" Value="#1195989A"/>
        <Setter Property="Foreground" Value="#FF95989A"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Cursor" Value="Hand"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Black"/>
                <Setter Property="Foreground" Value="#FFD6D6D6"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Status bar -->
    <Style x:Key="MainWindowStatusBar" TargetType="{x:Type StatusBar}">
        <Setter Property="Background" Value="#FF0D0D0D"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Foreground" Value="#FF95989A"/>
        <Setter Property="BorderBrush" Value="#1195989A"/>
        <Setter Property="BorderThickness" Value="0,1,0,0"/>
    </Style>

    <Style x:Key="MainWindowStatusBarItem" TargetType="{x:Type StatusBarItem}">
        <Setter Property="BorderThickness" Value="0,0,1,0"/>
        <Setter Property="BorderBrush" Value="#1195989A"/>
        <Setter Property="Margin" Value="10,0,10,0"/>
    </Style>
    
    <!-- Window content -->
    <Style x:Key="MainWindowCont" TargetType="{x:Type WrapPanel}">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Margin" Value="0"/>
    </Style>
</ResourceDictionary>