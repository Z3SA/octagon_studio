{
  "name": "octagon_studio",
  "productName": "Octagon Modmaking Studio",
  "version": "0.1.1",
  "description": "Octagon Modmaking Studio - visual editor for modification development on S.T.A.L.K.E.R. Call of Pripyat",
  "scripts": {
    "build": "concurrently \"yarn build-main\" \"yarn build-renderer\"",
    "build-dll": "cross-env NODE_ENV=development webpack --config ./configs/webpack.config.renderer.dev.dll.babel.js --colors",
    "build-e2e": "cross-env E2E_BUILD=true yarn build",
    "build-main": "cross-env NODE_ENV=production webpack --config ./configs/webpack.config.main.prod.babel.js --colors",
    "build-renderer": "cross-env NODE_ENV=production webpack --config ./configs/webpack.config.renderer.prod.babel.js --colors",
    "dev": "cross-env START_HOT=1 node -r @babel/register ./internals/scripts/CheckPortInUse.js && cross-env START_HOT=1 yarn start-renderer-dev",
    "lint-ts": "cross-env NODE_ENV=development tslint --project tsconfig.json",
    "lint-ts-fix": "cross-env NODE_ENV=development prettier-tslint fix '**/*.ts', '**/*.tsx'",
    "lint": "cross-env NODE_ENV=development eslint --cache --format=pretty .",
    "lint-fix": "yarn --silent lint --fix; exit 0",
    "lint-styles": "stylelint --ignore-path .eslintignore '**/*.*(css|scss)' --syntax scss",
    "lint-styles-fix": "yarn --silent lint-styles --fix; exit 0",
    "package": "yarn build && electron-builder build --publish never",
    "package-all": "yarn build && electron-builder build -mwl",
    "package-ci": "yarn postinstall && yarn build && electron-builder --publish always",
    "package-linux": "yarn build && electron-builder build --linux",
    "package-win": "yarn build && electron-builder build --win --x64",
    "postinstall": "electron-builder install-app-deps package.json && yarn build-dll && opencollective-postinstall",
    "postlint-fix": "prettier --ignore-path .eslintignore --single-quote --write '**/*.{js,jsx,json,html,css,less,scss,yml}'",
    "postlint-styles-fix": "prettier --ignore-path .eslintignore --single-quote --write '**/*.{css,scss}'",
    "preinstall": "node ./internals/scripts/CheckYarn.js",
    "prestart": "yarn build",
    "start": "cross-env NODE_ENV=production electron ./app/main.prod.js",
    "start-main-dev": "cross-env HOT=1 NODE_ENV=development electron -r @babel/register ./app/main.dev.babel.js",
    "start-renderer-dev": "cross-env NODE_ENV=development webpack-dev-server --config configs/webpack.config.renderer.dev.babel.js",
    "test": "cross-env NODE_ENV=test BABEL_DISABLE_CACHE=1 jest",
    "test-all": "yarn lint && yarn build && yarn test && yarn build-e2e && yarn test-e2e",
    "test-e2e": "node -r @babel/register ./internals/scripts/CheckBuiltsExist.js && cross-env NODE_ENV=test testcafe electron:./ ./test/e2e/HomePage.e2e.js",
    "test-e2e-live": "node -r @babel/register ./internals/scripts/CheckBuiltsExist.js && cross-env NODE_ENV=test testcafe-live electron:./ ./test/e2e/HomePage.e2e.js",
    "test-watch": "yarn test --watch"
  },
  "lint-staged": {
    "*.{ts,tsx}": [
      "cross-env NODE_ENV=development prettier-tslint fix '**/*.ts', '**/*.tsx'",
      "git add"
    ],
    "*.{js,jsx}": [
      "cross-env NODE_ENV=development eslint --cache --format=pretty",
      "git add"
    ],
    "{*.json,.{babelrc,eslintrc,prettierrc,stylelintrc}}": [
      "prettier --ignore-path .eslintignore --parser json --write",
      "git add"
    ],
    "*.{css,scss}": [
      "stylelint --ignore-path .eslintignore --syntax scss --fix",
      "prettier --ignore-path .eslintignore --single-quote --write",
      "git add"
    ],
    "*.{html,md,yml}": [
      "prettier --ignore-path .eslintignore --single-quote --write",
      "git add"
    ]
  },
  "main": "./app/main.prod.js",
  "build": {
    "productName": "ElectronReact",
    "appId": "org.develar.ElectronReact",
    "files": [
      "app/dist/",
      "app/app.html",
      "app/main.prod.js",
      "app/main.prod.js.map",
      "package.json"
    ],
    "dmg": {
      "contents": [
        {
          "x": 130,
          "y": 220
        },
        {
          "x": 410,
          "y": 220,
          "type": "link",
          "path": "/Applications"
        }
      ]
    },
    "win": {
      "target": [
        "nsis",
        "msi"
      ]
    },
    "linux": {
      "target": [
        "deb",
        "rpm",
        "snap",
        "AppImage"
      ],
      "category": "Development"
    },
    "directories": {
      "buildResources": "resources",
      "output": "release",
      "files": [
        "**/*",
        "resources/icon.*"
      ]
    },
    "publish": {
      "provider": "github",
      "owner": "electron-react-boilerplate",
      "repo": "electron-react-boilerplate",
      "private": false
    }
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Z3SA/octagon_studio.git"
  },
  "author": {
    "name": "Bukin Nikita",
    "email": "me@z3sa.ru",
    "url": "https://github.com/Z3SA"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/electron-react-boilerplate/electron-react-boilerplate/issues"
  },
  "keywords": [
    "electron",
    "boilerplate",
    "react",
    "redux",
    "sass",
    "webpack",
    "hot",
    "reload"
  ],
  "homepage": "https://github.com/Z3SA/octagon_studio#readme",
  "jest": {
    "testURL": "http://localhost/",
    "moduleNameMapper": {
      "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/internals/mocks/fileMock.js",
      "\\.(css|less|sass|scss)$": "identity-obj-proxy"
    },
    "moduleFileExtensions": [
      "js",
      "ts",
      "jsx",
      "tsx",
      "json"
    ],
    "transform": {
      "^.+\\.[jt]sx?$": "babel-jest"
    },
    "testRegex": "test/.*(spec|test).(ts|tsx|js)$",
    "setupFiles": [
      "./internals/scripts/CheckBuiltsExist.js"
    ]
  },
  "devDependencies": {
    "@babel/core": "^7.4.0",
    "@babel/plugin-proposal-class-properties": "^7.4.0",
    "@babel/plugin-proposal-decorators": "^7.4.0",
    "@babel/plugin-proposal-do-expressions": "^7.2.0",
    "@babel/plugin-proposal-export-default-from": "^7.2.0",
    "@babel/plugin-proposal-export-namespace-from": "^7.2.0",
    "@babel/plugin-proposal-function-bind": "^7.2.0",
    "@babel/plugin-proposal-function-sent": "^7.2.0",
    "@babel/plugin-proposal-json-strings": "^7.2.0",
    "@babel/plugin-proposal-logical-assignment-operators": "^7.2.0",
    "@babel/plugin-proposal-nullish-coalescing-operator": "^7.2.0",
    "@babel/plugin-proposal-numeric-separator": "^7.2.0",
    "@babel/plugin-proposal-optional-chaining": "^7.2.0",
    "@babel/plugin-proposal-pipeline-operator": "^7.3.2",
    "@babel/plugin-proposal-throw-expressions": "^7.2.0",
    "@babel/plugin-syntax-dynamic-import": "^7.2.0",
    "@babel/plugin-syntax-import-meta": "^7.2.0",
    "@babel/plugin-transform-react-constant-elements": "^7.2.0",
    "@babel/plugin-transform-react-inline-elements": "^7.2.0",
    "@babel/preset-env": "^7.4.2",
    "@babel/preset-react": "^7.0.0",
    "@babel/preset-typescript": "^7.1.0",
    "@babel/register": "^7.4.0",
    "babel-core": "7.0.0-bridge.0",
    "babel-eslint": "^10.0.1",
    "babel-jest": "^23.6.0",
    "babel-loader": "^8.0.5",
    "babel-plugin-dev-expression": "^0.2.1",
    "babel-plugin-transform-react-remove-prop-types": "^0.4.24",
    "chalk": "^2.4.1",
    "concurrently": "^4.1.0",
    "cross-env": "^5.2.0",
    "cross-spawn": "^6.0.5",
    "css-loader": "^2.1.1",
    "detect-port": "^1.3.0",
    "electron": "^4.1.1",
    "electron-builder": "^20.39.0",
    "electron-devtools-installer": "^2.2.4",
    "enzyme": "^3.9.0",
    "enzyme-adapter-react-16": "^1.11.2",
    "enzyme-to-json": "^3.3.5",
    "eslint": "^5.15.3",
    "eslint-config-airbnb": "^17.1.0",
    "eslint-config-erb": "^0.0.2",
    "eslint-config-prettier": "^3.6.0",
    "eslint-formatter-pretty": "^2.1.1",
    "eslint-import-resolver-webpack": "^0.11.0",
    "eslint-plugin-compat": "^2.7.0",
    "eslint-plugin-import": "^2.16.0",
    "eslint-plugin-jest": "^22.4.1",
    "eslint-plugin-jsx-a11y": "6.2.1",
    "eslint-plugin-prettier": "^3.0.0",
    "eslint-plugin-promise": "^4.0.1",
    "eslint-plugin-react": "^7.11.1",
    "eslint-plugin-testcafe": "^0.2.1",
    "fbjs-scripts": "^1.0.1",
    "file-loader": "^3.0.1",
    "husky": "^1.3.0",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^23.6.0",
    "lint-staged": "^8.1.0",
    "mini-css-extract-plugin": "^0.5.0",
    "node-sass": "^4.11.0",
    "opencollective-postinstall": "^2.0.1",
    "optimize-css-assets-webpack-plugin": "^5.0.1",
    "prettier": "^1.15.3",
    "react-test-renderer": "^16.7.0",
    "redux-logger": "^3.0.6",
    "rimraf": "^2.6.2",
    "sass-loader": "^7.1.0",
    "sinon": "^7.2.2",
    "spectron": "^5.0.0",
    "style-loader": "^0.23.1",
    "stylelint": "^9.9.0",
    "stylelint-config-prettier": "^4.0.0",
    "stylelint-config-standard": "^18.2.0",
    "terser-webpack-plugin": "^1.2.0",
    "testcafe": "^0.23.3",
    "testcafe-browser-provider-electron": "^0.0.8",
    "testcafe-live": "^0.1.4",
    "testcafe-react-selectors": "^3.0.2",
    "ts-loader": "^5.3.3",
    "typescript": "^3.3.4000",
    "url-loader": "^1.1.2",
    "webpack": "^4.29.6",
    "webpack-bundle-analyzer": "^3.0.3",
    "webpack-cli": "^3.1.2",
    "webpack-dev-server": "^3.1.14",
    "webpack-merge": "^4.1.5",
    "yarn": "^1.12.3"
  },
  "dependencies": {
    "@fortawesome/fontawesome-free": "^5.8.1",
    "@types/react-dom": "^16.8.3",
    "antd": "^3.15.1",
    "connected-react-router": "^5.0.1",
    "devtron": "^1.4.0",
    "electron-debug": "^2.1.0",
    "electron-log": "^2.2.17",
    "electron-updater": "^4.0.6",
    "eslint-plugin-flowtype": "^3.4.2",
    "fork-ts-checker-webpack-plugin": "^1.0.0",
    "history": "^4.7.2",
    "less": "^3.9.0",
    "less-loader": "^4.1.0",
    "node-less": "^1.0.0",
    "prettier-tslint": "^0.4.2",
    "react": "^16.7.0",
    "react-dom": "^16.7.0",
    "react-hot-loader": "^4.6.3",
    "react-redux": "^5.1.1",
    "react-router": "^4.3.1",
    "react-router-dom": "^4.3.1",
    "redux": "^4.0.1",
    "redux-thunk": "^2.3.0",
    "sha256": "^0.2.0",
    "source-map-loader": "^0.2.4",
    "source-map-support": "^0.5.9",
    "tslint": "^5.14.0",
    "tslint-config-prettier": "^1.18.0",
    "tslint-react": "^3.6.0"
  },
  "devEngines": {
    "node": ">=7.x",
    "npm": ">=4.x",
    "yarn": ">=0.21.3"
  },
  "collective": {
    "url": "https://opencollective.com/electron-react-boilerplate-594"
  },
  "browserslist": "electron 1.6",
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  }
}
